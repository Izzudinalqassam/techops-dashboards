# Development Dockerfile with hot reload support
FROM node:20-alpine

# Install development tools
RUN apk add --no-cache \
    git \
    wget \
    curl \
    && npm install -g nodemon concurrently

# Create app user for security (even in development)
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY --chown=nodejs:nodejs package*.json ./
COPY --chown=nodejs:nodejs backend/package*.json ./backend/

# Install dependencies
RUN npm install
RUN cd backend && npm install

# Copy configuration files
COPY --chown=nodejs:nodejs tsconfig*.json ./
COPY --chown=nodejs:nodejs vite.config.ts ./
COPY --chown=nodejs:nodejs tailwind.config.js ./
COPY --chown=nodejs:nodejs postcss.config.js ./
COPY --chown=nodejs:nodejs eslint.config.js ./
COPY --chown=nodejs:nodejs index.html ./

# Copy source code (will be overridden by volume mounts in development)
COPY --chown=nodejs:nodejs src/ ./src/
COPY --chown=nodejs:nodejs backend/ ./backend/

# Create logs directory
RUN mkdir -p backend/logs && chown -R nodejs:nodejs backend/logs

# Switch to non-root user
USER nodejs

# Expose ports
EXPOSE 3001 5173

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3001/api/health || exit 1

# Development command with hot reload
CMD ["npm", "run", "dev"]